arp.c:
//发送arp请求
void arp_send_request(iface_info_t *iface, u32 dst_ip)
//发送arp应答
void arp_send_reply(iface_info_t *iface, struct ether_arp *req_hdr)
//转发数据包时，如果ARP缓存中没有相应条目，则发送ARP请求
//收到ARP请求时，如果Target Proto Addr为本端口地址，则ARP应答
void handle_arp_packet(iface_info_t *iface, char *packet, int len)



arpcache.c:
//查arpcache的ip->mac映射表项
int arpcache_lookup(u32 ip4, u8 mac[ETH_ALEN])
//添加等待发送的packet
void arpcache_append_packet(iface_info_t *iface, u32 ip4, char *packet, int len)
//插入新的ip->mac映射表项
void arpcache_insert(u32 ip4, u8 mac[ETH_ALEN])
//表项老化线程
void *arpcache_sweep(void *arg) 

icmp.c:
//发icmp包
void icmp_send_packet(const char *in_pkt, int len, u8 type, u8 code)


ip.c:
//最长前缀匹配
rt_entry_t *longest_prefix_match(u32 dst)
//路由表转发
void ip_forward_packet(u32 ip_dst, char *packet, int len)
//处理ip包
void handle_ip_packet(iface_info_t *iface, char *packet, int len)
